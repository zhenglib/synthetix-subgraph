type Candle @entity {
  " tribe-period-periodId (periodId is timestamp / period) "
  id: ID!
  " Ticker for tribe (e.g. 'hUSD') or 'HAKA'"
  tribe: String!
  open: BigDecimal!
  high: BigDecimal!
  low: BigDecimal!
  close: BigDecimal!
  average: BigDecimal!
  timestamp: BigInt!
  " Duration this candle captures in seconds. Year, quarter, month, week, day, hour, and 15 minutes available. "
  period: BigInt!
  " Number of RateUpdates aggregated into this candle, mostly useful for the indexer to calculate averages "
  aggregatedPrices: BigInt!
}

type InversePricingInfo @entity {
  " Name of inverse tribe. E.g. iETH "
  id: ID!

  " whether or not this inverse tribe has been frozen "
  frozen: Boolean!

  " configured upper limit "
  upperLimit: BigDecimal!

  " configured lower limit "
  lowerLimit: BigDecimal!

  " matching price point with long tribe "
  entryPoint: BigDecimal!
}

type LatestRate @entity {
  " Name of tribe. E.g. hUSD "
  id: ID!

  " Tribe USD rate "
  rate: BigDecimal!

  " Address of the aggregator which produces current result "
  aggregator: Bytes!
}

" Latest Rates over time "
type RateUpdate @entity {
  " <transaction hash>-<currency key> "
  id: ID!

  " currencyKey for which this this rate update applies "
  currencyKey: Bytes!

  " currencyKey expressed as a string "
  tribe: String!

  " the rate recorded at this timestamp "
  rate: BigDecimal!

  " the block which this rate was recorded "
  block: BigInt!

  " timestamp of the block in which the rate was recorded "
  timestamp: BigInt!
}

type FeeRate @entity {
  " string representing the setting name "
  id: ID!

  setting: String!

  " name of the tribe this record applies to, if any "
  tribe: String

  " value of the setting "
  rate: BigDecimal!
}

" DEPRECATED: See the Candles entity"
type DailyCandle @entity {
  " DEPRECATED: See the Candles entity "
  id: ID!
  tribe: String!
  open: BigDecimal!
  high: BigDecimal!
  low: BigDecimal!
  close: BigDecimal!
  timestamp: BigInt!
}
